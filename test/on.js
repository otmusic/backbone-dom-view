// Generated by CoffeeScript 1.8.0
(function() {
  define(['chai', 'backbone', 'backbone-dom-view', 'jquery'], function(_arg, Backbone, DomView, $) {
    var expect, model;
    expect = _arg.expect;
    model = null;
    beforeEach(function() {
      return model = new Backbone.Model();
    });
    return describe('on helper', function() {
      it('should run function on dom event', function(done) {
        var View, view;
        View = DomView.extend({
          template: {
            '': {
              on: {
                'click': function() {
                  expect(this).to.be.instanceOf(View);
                  return done();
                }
              }
            }
          }
        });
        view = new View({
          model: model
        });
        return view.$el.click();
      });
      return it('should run function on delegate event', function() {
        var View, eventsCalled, view;
        eventsCalled = 0;
        View = DomView.extend({
          el: '<li><a href="#"></a><button></button></li>',
          template: {
            '': {
              on: {
                'click': {
                  'a': function(e) {
                    eventsCalled++;
                    expect(this).to.be.instanceOf(View);
                    return expect($(e.currentTarget)).to.match('a');
                  },
                  'button': function(e) {
                    eventsCalled++;
                    expect(this).to.be.instanceOf(View);
                    return expect($(e.currentTarget)).to.match('button');
                  }
                }
              }
            }
          }
        });
        view = new View({
          model: model
        });
        view.$el.click();
        view.$el.find('a').click();
        view.$el.find('button').click();
        return expect(eventsCalled).to.be.equal(2);
      });
    });
  });

}).call(this);
